<?php

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.GetTransactionsRequest</code>.
 */
class GetTransactionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Optionally specify the starting block from which to begin including all transactions.
     * Either the starting block hash or height may be specified, but not both.
     * If a block height is specified and is negative, the absolute value becomes the number of
     * last blocks to include.  That is, given a current chain height of 1000 and a starting block
     * height of -3, transaction notifications will be created for blocks 998, 999, and 1000.
     * If both options are excluded, transaction results are created for transactions since the
     * genesis block.
     *
     * Generated from protobuf field <code>bytes starting_block_hash = 1;</code>
     */
    private $starting_block_hash = '';
    /**
     * Generated from protobuf field <code>sint32 starting_block_height = 2;</code>.
     */
    private $starting_block_height = 0;
    /**
     * Optionally specify the last block that transaction results may appear in.
     * Either the ending block hash or height may be specified, but not both.
     * If both are excluded, transaction results are created for all transactions
     * through the best block, and include all unmined transactions.
     *
     * Generated from protobuf field <code>bytes ending_block_hash = 3;</code>
     */
    private $ending_block_hash = '';
    /**
     * Generated from protobuf field <code>int32 ending_block_height = 4;</code>.
     */
    private $ending_block_height = 0;
    /**
     * Include at least this many of the newest transactions if they exist.
     * Cannot be used when the ending block hash is specified.
     *
     * TODO: remove until spec adds it back in some way.
     *
     * Generated from protobuf field <code>int32 minimum_recent_transactions = 5;</code>
     */
    private $minimum_recent_transactions = 0;

    public function __construct()
    {
        \GPBMetadata\Api::initOnce();
        parent::__construct();
    }

    /**
     * Optionally specify the starting block from which to begin including all transactions.
     * Either the starting block hash or height may be specified, but not both.
     * If a block height is specified and is negative, the absolute value becomes the number of
     * last blocks to include.  That is, given a current chain height of 1000 and a starting block
     * height of -3, transaction notifications will be created for blocks 998, 999, and 1000.
     * If both options are excluded, transaction results are created for transactions since the
     * genesis block.
     *
     * Generated from protobuf field <code>bytes starting_block_hash = 1;</code>
     *
     * @return string
     */
    public function getStartingBlockHash()
    {
        return $this->starting_block_hash;
    }

    /**
     * Optionally specify the starting block from which to begin including all transactions.
     * Either the starting block hash or height may be specified, but not both.
     * If a block height is specified and is negative, the absolute value becomes the number of
     * last blocks to include.  That is, given a current chain height of 1000 and a starting block
     * height of -3, transaction notifications will be created for blocks 998, 999, and 1000.
     * If both options are excluded, transaction results are created for transactions since the
     * genesis block.
     *
     * Generated from protobuf field <code>bytes starting_block_hash = 1;</code>
     *
     * @param string $var
     *
     * @return $this
     */
    public function setStartingBlockHash($var)
    {
        GPBUtil::checkString($var, false);
        $this->starting_block_hash = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>sint32 starting_block_height = 2;</code>.
     *
     * @return int
     */
    public function getStartingBlockHeight()
    {
        return $this->starting_block_height;
    }

    /**
     * Generated from protobuf field <code>sint32 starting_block_height = 2;</code>.
     *
     * @param int $var
     *
     * @return $this
     */
    public function setStartingBlockHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->starting_block_height = $var;

        return $this;
    }

    /**
     * Optionally specify the last block that transaction results may appear in.
     * Either the ending block hash or height may be specified, but not both.
     * If both are excluded, transaction results are created for all transactions
     * through the best block, and include all unmined transactions.
     *
     * Generated from protobuf field <code>bytes ending_block_hash = 3;</code>
     *
     * @return string
     */
    public function getEndingBlockHash()
    {
        return $this->ending_block_hash;
    }

    /**
     * Optionally specify the last block that transaction results may appear in.
     * Either the ending block hash or height may be specified, but not both.
     * If both are excluded, transaction results are created for all transactions
     * through the best block, and include all unmined transactions.
     *
     * Generated from protobuf field <code>bytes ending_block_hash = 3;</code>
     *
     * @param string $var
     *
     * @return $this
     */
    public function setEndingBlockHash($var)
    {
        GPBUtil::checkString($var, false);
        $this->ending_block_hash = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 ending_block_height = 4;</code>.
     *
     * @return int
     */
    public function getEndingBlockHeight()
    {
        return $this->ending_block_height;
    }

    /**
     * Generated from protobuf field <code>int32 ending_block_height = 4;</code>.
     *
     * @param int $var
     *
     * @return $this
     */
    public function setEndingBlockHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->ending_block_height = $var;

        return $this;
    }

    /**
     * Include at least this many of the newest transactions if they exist.
     * Cannot be used when the ending block hash is specified.
     *
     * TODO: remove until spec adds it back in some way.
     *
     * Generated from protobuf field <code>int32 minimum_recent_transactions = 5;</code>
     *
     * @return int
     */
    public function getMinimumRecentTransactions()
    {
        return $this->minimum_recent_transactions;
    }

    /**
     * Include at least this many of the newest transactions if they exist.
     * Cannot be used when the ending block hash is specified.
     *
     * TODO: remove until spec adds it back in some way.
     *
     * Generated from protobuf field <code>int32 minimum_recent_transactions = 5;</code>
     *
     * @param int $var
     *
     * @return $this
     */
    public function setMinimumRecentTransactions($var)
    {
        GPBUtil::checkInt32($var);
        $this->minimum_recent_transactions = $var;

        return $this;
    }
}
