<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api.proto

namespace Walletrpc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>walletrpc.TransactionNotificationsResponse</code>
 */
class TransactionNotificationsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Sorted by increasing height.  This is a repeated field so many new blocks
     * in a new best chain can be notified at once during a reorganize.
     *
     * Generated from protobuf field <code>repeated .walletrpc.BlockDetails attached_blocks = 1;</code>
     */
    private $attached_blocks;
    /**
     * If there was a chain reorganize, there may have been blocks with wallet
     * transactions that are no longer in the best chain.  These are those
     * block's hashes.
     *
     * Generated from protobuf field <code>repeated bytes detached_blocks = 2;</code>
     */
    private $detached_blocks;
    /**
     * Any new unmined transactions are included here.  These unmined transactions
     * refer to the current best chain, so transactions from detached blocks may
     * be moved to mempool and included here if they are not mined or double spent
     * in the new chain.  Additonally, if no new blocks were attached but a relevant
     * unmined transaction is seen by the wallet, it will be reported here.
     *
     * Generated from protobuf field <code>repeated .walletrpc.TransactionDetails unmined_transactions = 3;</code>
     */
    private $unmined_transactions;
    /**
     * Instead of notifying all of the removed unmined transactions,
     * just send all of the current hashes.
     *
     * Generated from protobuf field <code>repeated bytes unmined_transaction_hashes = 4;</code>
     */
    private $unmined_transaction_hashes;

    public function __construct() {
        \GPBMetadata\Api::initOnce();
        parent::__construct();
    }

    /**
     * Sorted by increasing height.  This is a repeated field so many new blocks
     * in a new best chain can be notified at once during a reorganize.
     *
     * Generated from protobuf field <code>repeated .walletrpc.BlockDetails attached_blocks = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAttachedBlocks()
    {
        return $this->attached_blocks;
    }

    /**
     * Sorted by increasing height.  This is a repeated field so many new blocks
     * in a new best chain can be notified at once during a reorganize.
     *
     * Generated from protobuf field <code>repeated .walletrpc.BlockDetails attached_blocks = 1;</code>
     * @param \Walletrpc\BlockDetails[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAttachedBlocks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Walletrpc\BlockDetails::class);
        $this->attached_blocks = $arr;

        return $this;
    }

    /**
     * If there was a chain reorganize, there may have been blocks with wallet
     * transactions that are no longer in the best chain.  These are those
     * block's hashes.
     *
     * Generated from protobuf field <code>repeated bytes detached_blocks = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDetachedBlocks()
    {
        return $this->detached_blocks;
    }

    /**
     * If there was a chain reorganize, there may have been blocks with wallet
     * transactions that are no longer in the best chain.  These are those
     * block's hashes.
     *
     * Generated from protobuf field <code>repeated bytes detached_blocks = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDetachedBlocks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->detached_blocks = $arr;

        return $this;
    }

    /**
     * Any new unmined transactions are included here.  These unmined transactions
     * refer to the current best chain, so transactions from detached blocks may
     * be moved to mempool and included here if they are not mined or double spent
     * in the new chain.  Additonally, if no new blocks were attached but a relevant
     * unmined transaction is seen by the wallet, it will be reported here.
     *
     * Generated from protobuf field <code>repeated .walletrpc.TransactionDetails unmined_transactions = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUnminedTransactions()
    {
        return $this->unmined_transactions;
    }

    /**
     * Any new unmined transactions are included here.  These unmined transactions
     * refer to the current best chain, so transactions from detached blocks may
     * be moved to mempool and included here if they are not mined or double spent
     * in the new chain.  Additonally, if no new blocks were attached but a relevant
     * unmined transaction is seen by the wallet, it will be reported here.
     *
     * Generated from protobuf field <code>repeated .walletrpc.TransactionDetails unmined_transactions = 3;</code>
     * @param \Walletrpc\TransactionDetails[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUnminedTransactions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Walletrpc\TransactionDetails::class);
        $this->unmined_transactions = $arr;

        return $this;
    }

    /**
     * Instead of notifying all of the removed unmined transactions,
     * just send all of the current hashes.
     *
     * Generated from protobuf field <code>repeated bytes unmined_transaction_hashes = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUnminedTransactionHashes()
    {
        return $this->unmined_transaction_hashes;
    }

    /**
     * Instead of notifying all of the removed unmined transactions,
     * just send all of the current hashes.
     *
     * Generated from protobuf field <code>repeated bytes unmined_transaction_hashes = 4;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUnminedTransactionHashes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->unmined_transaction_hashes = $arr;

        return $this;
    }

}

